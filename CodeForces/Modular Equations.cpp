#include <bits/stdc++.h>
using namespace std;

/* TYPES  */
#define ll long long
#define pii pair<int, int>
#define pll pair<long long, long long>
#define vi vector<int>
#define vll vector<long long>
#define mii map<int, int>
#define si set<int>
#define sc set<char>

/* FUNCTIONS */
#define f(i,s,e) for(long long int i=s;i<e;i++)
#define cf(i,s,e) for(long long int i=s;i<=e;i++)
#define rf(i,e,s) for(long long int i=e-1;i>=s;i--)
#define pb push_back
#define eb emplace_back

/* PRINTS */
template <class T>

/* UTILS */
//#define PI 3.1415926535897932384626433832795
#define read(type) readInt<type>()
#define all(v) v.begin(), v.end()
ll min(ll a,int b) { if (a<b) return a; return b; }
ll min(int a,ll b) { if (a<b) return a; return b; }
ll max(ll a,int b) { if (a>b) return a; return b; }
ll max(int a,ll b) { if (a>b) return a; return b; }
ll gcd(ll a,ll b) { if (b==0) return a; return gcd(b, a%b); }
ll lcm(ll a,ll b) { return a/gcd(a,b)*b; }
string to_upper(string a) { for (int i=0;i<(int)a.size();++i) if (a[i]>='a' && a[i]<='z') a[i]-='a'-'A'; return a; }
string to_lower(string a) { for (int i=0;i<(int)a.size();++i) if (a[i]>='A' && a[i]<='Z') a[i]+='a'-'A'; return a; }
void print_arr(int a[], int size) { for (int i=0; i<size; i++) cout << a[i] << " ";}
bool prime(ll a) { if (a==1) return 0; for (int i=2;i<=round(sqrt(a));++i) if (a%i==0) return 0; return 1; }
void yes() { cout<<"YES\n"; }
void no() { cout<<"NO\n"; }
const char enl= '\n';
/*  All Required define Pre-Processors and typedef Constants */
typedef long int int32;
typedef unsigned long int uint32;
typedef long long int int64;
typedef unsigned long long int  uint64;

struct compare {
	bool operator()(const pair<ll, ll>& a, const pair<ll, ll>& b) {
		if (a.first == b.first) {
			// ascending
			return a.second > b.second;
		}
		// descending
		return a.first < b.first;
	}
};


void solve() {
	ll a, b;
//	vector<ll> x = {273, 280, 288, 312, 315, 320, 324, 336, 351, 360, 364, 378, 384, 390, 405, 416, 420, 432, 448, 455, 468, 480, 504, 520, 540, 546, 560, 567, 576, 585, 624, 630, 640, 648, 672, 702, 720, 728, 756, 768, 780, 810, 819, 832, 840, 864, 896, 910, 936, 945, 960, 1008, 1040, 1053, 1080, 1092, 1120, 1134, 1152, 1170, 1248, 1260, 1280, 1296, 1344, 1365, 1404, 1440, 1456, 1512, 1560, 1620, 1638, 1664, 1680, 1728, 1755, 1792, 1820, 1872, 1890, 1920, 2016, 2080, 2106, 2160, 2184, 2240, 2268, 2304, 2340, 2457, 2496, 2520, 2592, 2688, 2730, 2808, 2835, 2880, 2912, 3024, 3120, 3240, 3276, 3328, 3360, 3456, 3510, 3640, 3744, 3780, 3840, 4032, 4095, 4160, 4212, 4320, 4368, 4480, 4536, 4680, 4914, 4992, 5040, 5184, 5265, 5376, 5460, 5616, 5670, 5760, 5824, 6048, 6240, 6480, 6552, 6720, 6912, 7020, 7280, 7371, 7488, 7560, 8064, 8190, 8320, 8424, 8640, 8736, 8960, 9072, 9360, 9828, 9984, 10080, 10368, 10530, 10920, 11232, 11340, 11520, 11648, 12096, 12285, 12480, 12960, 13104, 13440, 14040, 14560, 14742, 14976, 15120, 16128, 16380, 16640, 16848, 17280, 17472, 18144, 18720, 19656, 20160, 20736, 21060, 21840, 22464, 22680, 23296, 24192, 24570, 24960, 25920, 26208, 26880, 28080, 29120, 29484, 29952, 30240, 32760, 33696, 34560, 34944, 36288, 36855, 37440, 39312, 40320, 42120, 43680, 44928, 45360, 48384, 49140, 49920, 51840, 52416, 56160, 58240, 58968, 60480, 65520, 67392, 69888, 72576, 73710, 74880, 78624, 80640, 84240, 87360, 89856, 90720, 98280, 103680, 104832, 112320, 116480, 117936, 120960, 131040, 134784, 145152, 147420, 149760, 157248, 168480, 174720, 181440, 196560, 209664, 224640, 235872, 241920, 262080, 269568, 294840, 314496, 336960, 349440, 362880, 393120, 449280, 471744, 524160, 589680, 628992, 673920, 725760, 786240, 943488, 1048320, 1179360, 1347840, 1572480, 1886976, 2358720, 3144960, 4717440, 9434880};
//	vector<ll> y = {273, 280, 288, 312, 315, 320, 324, 336, 351, 360, 364, 378, 384, 390, 405, 416, 420, 432, 448, 455, 468, 480, 504, 520, 540, 546, 560, 567, 576, 585, 624, 630, 640, 648, 672, 702, 720, 728, 756, 768, 780, 810, 819, 832, 840, 864, 896, 910, 936, 945, 960, 1008, 1040, 1053, 1080, 1092, 1120, 1134, 1152, 1170, 1248, 1260, 1280, 1296, 1344, 1365, 1404, 1440, 1456, 1512, 1560, 1620, 1638, 1664, 1680, 1728, 1755, 1792, 1820, 1872, 1890, 1920, 2016, 2080, 2106, 2160, 2184, 2240, 2268, 2304, 2340, 2457, 2496, 2520, 2592, 2688, 2730, 2808, 2835, 2880, 2912, 3024, 3120, 3240, 3276, 3328, 3360, 3456, 3510, 3640, 3744, 3780, 3840, 4032, 4095, 4160, 4212, 4320, 4368, 4480, 4536, 4680, 4914, 4992, 5040, 5184, 5265, 5376, 5460, 5616, 5670, 5760, 5824, 6048, 6240, 6480, 6552, 6720, 6912, 7020, 7280, 7371, 7488, 7560, 8064, 8190, 8320, 8424, 8640, 8736, 8960, 9072, 9360, 9828, 9984, 10080, 10368, 10530, 10920, 11232, 11340, 11520, 11648, 12096, 12285, 12480, 12960, 13104, 13440, 14040, 14560, 14742, 14976, 15120, 16128, 16380, 16640, 16848, 17280, 17472, 18144, 18720, 19656, 20160, 20736, 21060, 21840, 22464, 22680, 23296, 24192, 24570, 24960, 25920, 26208, 26880, 28080, 29120, 29484, 29952, 30240, 32760, 33696, 34560, 34944, 36288, 36855, 37440, 39312, 40320, 42120, 43680, 44928, 45360, 48384, 49140, 49920, 51840, 52416, 56160, 58240, 58968, 60480, 65520, 67392, 69888, 72576, 73710, 74880, 78624, 80640, 84240, 87360, 89856, 90720, 98280, 103680, 104832, 112320, 116480, 117936, 120960, 131040, 134784, 145152, 147420, 149760, 157248, 168480, 174720, 181440, 196560, 209664, 224640, 235872, 241920, 262080, 269568, 294840, 314496, 336960, 349440, 362880, 393120, 449280, 471744, 524160, 589680, 628992, 673920, 725760, 786240, 943488, 1048320, 1179360, 1347840, 1572480, 1886976, 2358720, 3144960, 4717440, 9434880};
	cin >> a >> b;
	if (a < b) {
		cout << 0 << "\n";
	} else if (a == b) {
		cout << "infinity" << "\n";
	} else {
		// get all factors of (a-b) > b 
		ll count = 0; 
		for (int i = 1; i*i <= (a-b); i++) {
			if ((a-b) % i == 0) {
				if ((a-b) % i == 0) {
					if (i > b) {
						count++;
					}
					// second condition checks that both factors are not the same as say (a-b) = 49 and i = 7, then 49%7 = 0, so and (a-b)/7 = 7, its a check for squares
					// first condition checks that (a-b)/i > b that the factor is greater than b, it does not have be to verified to be a factor as we are already doing that above :)
					if ((a-b)/i > b && (a-b)/i != i) {
						count++;
					} 
				}
			}
		}
		cout << count << endl;
	}
}


int main() {
	ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
	
		solve();
	
}
